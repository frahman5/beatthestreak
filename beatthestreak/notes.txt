Notes:

1) How to extract all the retrosheet ids from a piece of text
	-open python
	
	>>> file = open('TEXT_FILE_NAME', "rw")
	>>> file_string_list = file.readlines()
	>>> file.close()
	>>> p = re.compile("[a-z]{5}[0-9]{3}")
	>>> matches = [p.findall(string) for string in file_string]
	>>> result = [participant for list in matches for participant in list]

	-copy and paste result into your desired code

2) Variables that can be played with to optimize strategy
   - Number of bots N
   - Top P players P
   - how those P players are distributed to bots N
   - when a mulligan is claimed
   - when a bot doubles down or chooses a single player, or even if they
       skip a day
   - how players chosen
       -> Top P global players modulo distribution?
           -> Random distrubition?
       -> Top P nightly players module distribution?
           -> Random distribution?
       -> Top P nightly players taking into accont opposing pitcher ERA
           -> modulo distrubition?
           -> random distrubiton?

3) Future refactorings:
    -> install FellThroughExceptions on all appropriate functions
    -> If putting up on github, test filepath.get_root() so that it returns
    the right stirng REGARDLESS of what the cwd is or which module is calling in
    -> Update reporting to include
        -> minPA
        -> player choice method
       
