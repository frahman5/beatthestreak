Notes:

1) Variables that can be played with to optimize strategy
   - Number of bots N
   - Top P players P
   - how those P players are distributed to bots N
   - when a mulligan is claimed
   - when a bot doubles down or chooses a single player, or even if they
       skip a day
   - how players chosen
       -> Top P global players modulo distribution?
           -> module distrubition?
           -> random distributon?
       -> Top P nightly players modulo distribution?
           -> module distrubition?
           -> random distributon?
       -> Top P global players filtered by opposing pitcher ERA modulo?
           -> module distrubition?
           -> random distributon?
       -> Top P nightly players taking into accuont opposing pitcher ERA
           -> modulo distrubition?
           -> random distrubiton?

2) Future refactorings:
    -> install FellThroughExceptions on all appropriate functions
    -> If putting up on github, test filepath.get_root() so that it returns
    the right stirng REGARDLESS of what the cwd is or which module is calling in
    -> create a single source of truth for update logic in bot

3) ToDo before starting mass simulations
    -> Achieve 100% line-coverage and logical coverage of all modules
        -> testBot | DONE
            -> lastHistory element and update_history buffer
                -> logical testing must occur in NPSimulation
        -> tsetFilePath | DONE
        -> testNPReporter
        -> testNPSimulation
        -> testPlayer | DONE
        -> testResearcher | DONE
        -> testRetrosheet | DONE
             -> 95% test coverage is acceptable, because stragglers are
             lines that just check for existing files
        -> testUtilities | DONE
        -> Buffers that need Checking: |DONE
            -> bot: lastHistory | DONE
            -> NPSimulation: botHistory Buffer | DONE
            -> Researcher: | DONE
                -> listOfGamesBuffer | DONE
                -> boxscoreBuffer | DONE
                -> playerInfoBuffer | DONE
    -> Updating reporting
        -> include minPA
        -> player choice method
        -> update file names
    -> Get mass_simulate working

4) ToDo if decide to speedup:
     -> Perhaps remove unnecessary attributes, like player from bot. It's
        redundant since that information is stored in the history tuples
       
